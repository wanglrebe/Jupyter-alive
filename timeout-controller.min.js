// Minified version of the timeout controller
!function(){const e={en:{buttonStart:"Start Timeout Control",buttonStop:"Stop Timeout Control",panelTitle:"Timeout Control Settings",status:"Status",statusRunning:"Running",statusStopped:"Stopped",timeoutSetting:"Timeout Setting",detecting:"Detecting...",currentProgress:"Current Progress",resetCount:"Reset Count",minIntervalLabel:"Min Interval (5-30%)",maxIntervalLabel:"Max Interval (10-50%)",dangerThresholdLabel:"Auto Reset when Remaining Time Below (%)",minutes:"minutes",remaining:"remaining",startControl:"Start Control",stopControl:"Stop Control",showSettings:"Show Settings",hideSettings:"Hide Settings"},zh:{buttonStart:"启动超时控制",buttonStop:"停止超时控制",panelTitle:"超时控制设置",status:"状态",statusRunning:"运行中",statusStopped:"已停止",timeoutSetting:"超时设置",detecting:"检测中...",currentProgress:"当前进度",resetCount:"重置次数",minIntervalLabel:"最小间隔 (5-30%)",maxIntervalLabel:"最大间隔 (10-50%)",dangerThresholdLabel:"剩余时间低于此百分比时自动重置",minutes:"分钟",remaining:"剩余",startControl:"启动控制",stopControl:"停止控制",showSettings:"显示设置",hideSettings:"隐藏设置"}},t=(navigator.language||navigator.userLanguage||"en").toLowerCase().startsWith("zh")?"zh":"en",n=e[t],s=document.createElement("style");s.textContent=".timeout-control{position:fixed;bottom:20px;right:20px;z-index:10000}.timeout-button{background:#007bff;color:white;border:none;padding:8px 16px;border-radius:4px;cursor:pointer;font-size:14px;box-shadow:0 2px 4px rgba(0,0,0,0.2)}.timeout-button:hover{background:#0056b3}.timeout-button.active{background:#dc3545}.timeout-panel{position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);background:white;padding:20px;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.15);z-index:10001;min-width:300px;display:none}.timeout-panel.show{display:block}.panel-header{display:flex;justify-content:space-between;align-items:center;margin-bottom:15px}.panel-title{font-size:16px;font-weight:bold;margin:0}.close-button{background:none;border:none;font-size:20px;cursor:pointer;padding:0 5px}.status-info{margin:10px 0;padding:10px;background:#f8f9fa;border-radius:4px}.config-section{margin:15px 0}.config-item{margin:8px 0}.config-item label{display:block;margin-bottom:4px}.config-item input{width:100%;padding:4px 8px;border:1px solid #ddd;border-radius:4px}.overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.5);z-index:10000;display:none}.overlay.show{display:block}",document.head.appendChild(s);const i={dangerThreshold:.2,minIntervalPercent:.075,maxIntervalPercent:.2,absoluteMinInterval:15e3,absoluteMaxInterval:3e5,checkInterval:5e3},o={timeoutMin:null,resetTimer:null,checkTimer:null,totalResets:0,intervalRange:{min:null,max:null},isRunning:!1};function a(){return Math.floor(Math.random()*(o.intervalRange.max-o.intervalRange.min))+o.intervalRange.min}function l(){try{const e=Array.from(document.querySelectorAll(".lm-MenuBar-item")).find(e=>e.textContent.includes("Timeout:"));if(e){e.click(),o.totalResets++;const t=a();return console.log(`[${new Date().toLocaleTimeString()}] Reset #${o.totalResets}, next reset in ${(t/1e3).toFixed(1)}s`),!0}return!1}catch(e){return console.error("Reset error:",e),!1}}function r(){const e=window.timeoutUI;e&&(e.statusSpan.textContent=o.isRunning?n.statusRunning:n.statusStopped,e.statusSpan.style.color=o.isRunning?"#28a745":"#dc3545",null!==o.timeoutMin&&(e.timeoutSpan.textContent=`${o.timeoutMin} ${n.minutes}`,e.resetCountSpan.textContent=o.totalResets),e.button.textContent=o.isRunning?n.buttonStop:n.buttonStart,e.button.className=`timeout-button ${o.isRunning?"active":""}`,e.button.title=o.isRunning?n.stopControl:n.startControl,e.button.title+=e.panel.classList.contains("show")?` (${n.hideSettings})`:`(${n.showSettings})`)}function u(){const e=Array.from(document.querySelectorAll(".lm-MenuBar-item")).find(e=>e.textContent.includes("Timeout:"));if(e){const t=e.textContent.match(/Timeout:\s*(\d+(\.\d+)?)\s*\/\s*(\d+(\.\d+)?)/);if(t){const e=parseFloat(t[1]),s=parseFloat(t[3]);null===o.timeoutMin&&(o.timeoutMin=s,function(e){o.intervalRange.min=Math.max(i.absoluteMinInterval,Math.min(e*i.minIntervalPercent,i.absoluteMaxInterval)),o.intervalRange.max=Math.max(i.absoluteMinInterval,Math.min(e*i.maxIntervalPercent,i.absoluteMaxInterval)),o.intervalRange.max<=o.intervalRange.min&&(o.intervalRange.max=1.5*o.intervalRange.min);const t=e*(1-i.dangerThreshold);o.intervalRange.max>t&&(o.intervalRange.max=.8*t,o.intervalRange.min=Math.min(o.intervalRange.min,.5*o.intervalRange.max))}(s*6e4));const a=1-e/s;window.timeoutUI&&(window.timeoutUI.progressSpan.textContent=`${e.toFixed(1)}/${s} ${n.minutes} (${n.remaining} ${(100*a).toFixed(1)}%)`),a<=i.dangerThreshold&&l()}}r()}function c(){o.isRunning||(o.isRunning=!0,o.checkTimer=setInterval(u,i.checkInterval),o.resetTimer=setTimeout(function e(){return null===o.timeoutMin?void(o.resetTimer=setTimeout(e,1e3)):void(l()&&(o.resetTimer=setTimeout(e,a())))},2*i.checkInterval),r())}function m(){o.isRunning&&(o.resetTimer&&(clearTimeout(o.resetTimer),o.resetTimer=null),o.checkTimer&&(clearInterval(o.checkTimer),o.checkTimer=null),o.isRunning=!1,r())}!function(){const e=function(){const e=document.createElement("div");e.className="overlay",document.body.appendChild(e);const t=document.createElement("div");t.className="timeout-control",t.innerHTML=`<button class="timeout-button">${n.buttonStart}</button>`,document.body.appendChild(t);const s=document.createElement("div");return s.className="timeout-panel",s.innerHTML=`\n        <div class="panel-header">\n            <h3 class="panel-title">${n.panelTitle}</h3>\n            <button class="close-button">&times;</button>\n        </div>\n        <div class="status-info">\n            <div>${n.status}: <span id="script-status">${n.statusStopped}</span></div>\n            <div>${n.timeoutSetting}: <span id="timeout-detected">${n.detecting}</span></div>\n            <div>${n.currentProgress}: <span id="current-progress">-</span></div>\n            <div>${n.resetCount}: <span id="reset-count">0</span></div>\n        </div>\n        <div class="config-section">\n            <div class="config-item">\n                <label>${n.minIntervalLabel}</label>\n                <input type="number" id="min-interval" value="7.5" min="5" max="30" step="0.5">\n            </div>\n            <div class="config-item">\n                <label>${n.maxIntervalLabel}</label>\n                <input type="number" id="max-interval" value="20" min="10" max="50" step="0.5">\n            </div>\n            <div class="config-item">\n                <label>${n.dangerThresholdLabel}</label>\n                <input type="number" id="danger-threshold" value="20" min="10" max="40" step="1">\n            </div>\n        </div>\n    `,document.body.appendChild(s),{button:t.querySelector(".timeout-button"),panel:s,overlay:e,closeButton:s.querySelector(".close-button"),statusSpan:s.querySelector("#script-status"),timeoutSpan:s.querySelector("#timeout-detected"),progressSpan:s.querySelector("#current-progress"),resetCountSpan:s.querySelector("#reset-count"),minIntervalInput:s.querySelector("#min-interval"),maxIntervalInput:s.querySelector("#max-interval"),dangerThresholdInput:s.querySelector("#danger-threshold")}}();window.timeoutUI=e,e.button.addEventListener("click",()=>{o.isRunning?m():c(),r()}),e.button.addEventListener("dblclick",()=>{e.panel.classList.add("show"),e.overlay.classList.add("show"),r()}),e.closeButton.addEventListener("click",()=>{e.panel.classList.remove("show"),e.overlay.classList.remove("show"),r()}),e.overlay.addEventListener("click",()=>{e.panel.classList.remove("show"),e.overlay.classList.remove("show"),r()});const t=()=>{i.minIntervalPercent=e.minIntervalInput.value/100,i.maxIntervalPercent=e.maxIntervalInput.value/100,i.dangerThreshold=e.dangerThresholdInput.value/100,null!==o.timeoutMin&&function(e){o.intervalRange.min=Math.max(i.absoluteMinInterval,Math.min(e*i.minIntervalPercent,i.absoluteMaxInterval)),o.intervalRange.max=Math.max(i.absoluteMinInterval,Math.min(e*i.maxIntervalPercent,i.absoluteMaxInterval)),o.intervalRange.max<=o.intervalRange.min&&(o.intervalRange.max=1.5*o.intervalRange.min);const t=e*(1-i.dangerThreshold);o.intervalRange.max>t&&(o.intervalRange.max=.8*t,o.intervalRange.min=Math.min(o.intervalRange.min,.5*o.intervalRange.max))}(60*o.timeoutMin*1e3)};e.minIntervalInput.addEventListener("change",t),e.maxIntervalInput.addEventListener("change",t),e.dangerThresholdInput.addEventListener("change",t),e.button.title=n.startControl+` (${n.showSettings})`,r()}()}();